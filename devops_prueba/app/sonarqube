pipeline {
    agent any

    environment {
        SONARQUBE_SCANNER_HOME = tool 'SonarQubeScanner'
    }

    stages {
        stage('Unit Tests') {
            steps {
                script {
                    // Ejecutar pruebas unitarias con unittest
                    sh '''
                        cd devops_prueba
                        python -m unittest discover -s app -p "*.py"
                    '''
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    // Ejecutar análisis estático de SonarQube
                    sh '''
                        cd devops_prueba
                        ${SONARQUBE_SCANNER_HOME}/bin/sonar-scanner \
                            -Dsonar.projectKey=tu_proyecto_key \
                            -Dsonar.sources=app \
                            -Dsonar.host.url=http://tu_servidor_sonarqube \
                            -Dsonar.login=tu_token_sonarqube
                    '''
                }
            }
        }
    }

    post {
        always {
            junit 'devops_prueba/test-reports/*.xml'
            archiveArtifacts artifacts: 'devops_prueba/test-reports/*.xml', allowEmptyArchive: true
        }
    }
}
