pipeline {
    agent any

    environment {
        SCANNER_HOME = tool name: 'scanner-name', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
    }

    stages {
        stage('Setup Python Environment') {
            steps {
                script {
                    // Crear un entorno virtual
                    sh 'python3 -m venv venv'
                    // Activar el entorno virtual y actualizar pip
                    sh './venv/bin/pip install --upgrade pip'
                    // Instalar pytest y Flask en el entorno virtual
                    sh './venv/bin/pip install pytest flask'
                }
            }
        }

        stage('Unit Tests') {
            steps {
                script {
                    // Ejecutar pruebas unitarias dentro del entorno virtual
                    sh './venv/bin/pytest devops_prueba/app/test.py --junitxml=report.xml'
                }
            }
        }

        stage('SonarQube Code Analysis') {
            steps {
                dir("${WORKSPACE}") {
                    script {
                        withSonarQubeEnv('sonar') { // Asume que tu servidor SonarQube est√° configurado con el nombre 'sonar'
                            sh "${SCANNER_HOME}/bin/sonar-scanner \
                                -Dsonar.projectKey=your_project_key \
                                -Dsonar.sources=devops_prueba/app \
                                -Dsonar.host.url=${SONARQUBE_URL} \
                                -Dsonar.login=${SONARQUBE_TOKEN} \
                                -Dsonar.language=py \
                                -Dsonar.python.version=3.11"
                        }
                    }
                }
            }
        }

        stage("SonarQube Quality Gate Check") {
            steps {
                script {
                    def qualityGate = waitForQualityGate()
                    if (qualityGate.status != 'OK') {
                        echo "${qualityGate.status}"
                        error "Quality Gate failed: ${qualityGate.status}"
                    } else {
                        echo "${qualityGate.status}"
                        echo "SonarQube Quality Gates Passed"
                    }
                }
            }
        }
    }

    post {
        always {
            junit 'report.xml' // Publicar resultados de las pruebas unitarias
        }
    }
}
