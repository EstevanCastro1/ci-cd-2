apiVersion: apps/v1
kind: Deployment
metadata:
  name: "${NAME}"
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "${NAME}"
  template:
    metadata:
      labels:
        app: "${NAME}"
    spec:
      containers:
      - name: "${NAME}"
        image: ${REPO}:${TAG}
        ports:
        - containerPort: 5000
        env:
        - name: GREETING
          valueFrom:
            secretKeyRef:
              name: test-secret
              key: GREETING
        - name: VAR1
          value: "valor1_deploy"
        - name: VAR2
          value: "valor2_deploy"

---
kind: Service
apiVersion: v1
metadata:
  name: "${NAME}"
  namespace: ingress-nginx
  labels:
    app: "${NAME}"
spec:
  selector:
    app: "${NAME}"
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1    
kind: Ingress
metadata:
  name: "${NAME}"
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/ingress.allow-http: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "400"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 256k
    nginx.ingress.kubernetes.io/proxy-body-size: "300m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "400"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "400"
spec:
  rules:
  - host: "estevanca.tech"
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: "${NAME}"
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: test-secret
  namespace: ingress-nginx
type: Opaque
stringData:
  GREETING: "Â¡Bienvenidos !"
